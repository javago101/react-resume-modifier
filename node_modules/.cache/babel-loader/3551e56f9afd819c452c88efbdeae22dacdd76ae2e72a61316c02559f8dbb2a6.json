{"ast":null,"code":"import axios from 'axios';\nexport const analyzeResume = async resumeText => {\n  try {\n    // TODO: Replace with actual API call\n    // Simulating API response for now\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      sections: {\n        summary: generateRecommendations('summary'),\n        experience: generateRecommendations('experience'),\n        skills: generateRecommendations('skills'),\n        education: generateRecommendations('education'),\n        formatting: generateRecommendations('formatting')\n      },\n      overallScore: calculateScore(),\n      keyImprovements: generateKeyImprovements()\n    };\n  } catch (error) {\n    console.error('Failed to analyze resume:', error);\n    throw error;\n  }\n};\nconst generateRecommendations = section => {\n  const recommendations = {\n    summary: ['Make your professional summary more impactful by quantifying achievements', 'Add a clear career objective that aligns with the target position', 'Keep the summary concise, ideally 3-4 lines'],\n    experience: ['Use strong action verbs to begin each bullet point', 'Include specific metrics and achievements for each role', 'Focus on relevant experience for the target position'],\n    skills: ['Group skills by category (technical, soft skills, tools)', 'Prioritize skills mentioned in the job description', 'Remove outdated or irrelevant skills'],\n    education: ['List relevant coursework and academic projects', 'Include GPA if it\\'s above 3.5', 'Add any relevant certifications or training'],\n    formatting: ['Ensure consistent font size and style throughout', 'Use bullet points for better readability', 'Maintain appropriate white space between sections']\n  };\n  return {\n    suggestions: recommendations[section],\n    priority: Math.random() > 0.5 ? 'high' : 'medium',\n    score: Math.floor(Math.random() * 40) + 60\n  };\n};\nconst calculateScore = () => {\n  return Math.floor(Math.random() * 40) + 60;\n};\nconst generateKeyImprovements = () => {\n  return ['Add more quantifiable achievements', 'Improve formatting consistency', 'Enhance skills section relevance'];\n};","map":{"version":3,"names":["axios","analyzeResume","resumeText","Promise","resolve","setTimeout","sections","summary","generateRecommendations","experience","skills","education","formatting","overallScore","calculateScore","keyImprovements","generateKeyImprovements","error","console","section","recommendations","suggestions","priority","Math","random","score","floor"],"sources":["/Users/guoqingwang/Dev/Web/react-resume-modifier/src/services/aiService.js"],"sourcesContent":["import axios from 'axios';\n\nexport const analyzeResume = async (resumeText) => {\n    try {\n        // TODO: Replace with actual API call\n        // Simulating API response for now\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        return {\n            sections: {\n                summary: generateRecommendations('summary'),\n                experience: generateRecommendations('experience'),\n                skills: generateRecommendations('skills'),\n                education: generateRecommendations('education'),\n                formatting: generateRecommendations('formatting')\n            },\n            overallScore: calculateScore(),\n            keyImprovements: generateKeyImprovements()\n        };\n    } catch (error) {\n        console.error('Failed to analyze resume:', error);\n        throw error;\n    }\n};\n\nconst generateRecommendations = (section) => {\n    const recommendations = {\n        summary: [\n            'Make your professional summary more impactful by quantifying achievements',\n            'Add a clear career objective that aligns with the target position',\n            'Keep the summary concise, ideally 3-4 lines'\n        ],\n        experience: [\n            'Use strong action verbs to begin each bullet point',\n            'Include specific metrics and achievements for each role',\n            'Focus on relevant experience for the target position'\n        ],\n        skills: [\n            'Group skills by category (technical, soft skills, tools)',\n            'Prioritize skills mentioned in the job description',\n            'Remove outdated or irrelevant skills'\n        ],\n        education: [\n            'List relevant coursework and academic projects',\n            'Include GPA if it\\'s above 3.5',\n            'Add any relevant certifications or training'\n        ],\n        formatting: [\n            'Ensure consistent font size and style throughout',\n            'Use bullet points for better readability',\n            'Maintain appropriate white space between sections'\n        ]\n    };\n\n    return {\n        suggestions: recommendations[section],\n        priority: Math.random() > 0.5 ? 'high' : 'medium',\n        score: Math.floor(Math.random() * 40) + 60\n    };\n};\n\nconst calculateScore = () => {\n    return Math.floor(Math.random() * 40) + 60;\n};\n\nconst generateKeyImprovements = () => {\n    return [\n        'Add more quantifiable achievements',\n        'Improve formatting consistency',\n        'Enhance skills section relevance'\n    ];\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,MAAOC,UAAU,IAAK;EAC/C,IAAI;IACA;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IAEvD,OAAO;MACHE,QAAQ,EAAE;QACNC,OAAO,EAAEC,uBAAuB,CAAC,SAAS,CAAC;QAC3CC,UAAU,EAAED,uBAAuB,CAAC,YAAY,CAAC;QACjDE,MAAM,EAAEF,uBAAuB,CAAC,QAAQ,CAAC;QACzCG,SAAS,EAAEH,uBAAuB,CAAC,WAAW,CAAC;QAC/CI,UAAU,EAAEJ,uBAAuB,CAAC,YAAY;MACpD,CAAC;MACDK,YAAY,EAAEC,cAAc,CAAC,CAAC;MAC9BC,eAAe,EAAEC,uBAAuB,CAAC;IAC7C,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAMT,uBAAuB,GAAIW,OAAO,IAAK;EACzC,MAAMC,eAAe,GAAG;IACpBb,OAAO,EAAE,CACL,2EAA2E,EAC3E,mEAAmE,EACnE,6CAA6C,CAChD;IACDE,UAAU,EAAE,CACR,oDAAoD,EACpD,yDAAyD,EACzD,sDAAsD,CACzD;IACDC,MAAM,EAAE,CACJ,0DAA0D,EAC1D,oDAAoD,EACpD,sCAAsC,CACzC;IACDC,SAAS,EAAE,CACP,gDAAgD,EAChD,gCAAgC,EAChC,6CAA6C,CAChD;IACDC,UAAU,EAAE,CACR,kDAAkD,EAClD,0CAA0C,EAC1C,mDAAmD;EAE3D,CAAC;EAED,OAAO;IACHS,WAAW,EAAED,eAAe,CAACD,OAAO,CAAC;IACrCG,QAAQ,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ;IACjDC,KAAK,EAAEF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;EAC5C,CAAC;AACL,CAAC;AAED,MAAMV,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAOS,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;AAC9C,CAAC;AAED,MAAMR,uBAAuB,GAAGA,CAAA,KAAM;EAClC,OAAO,CACH,oCAAoC,EACpC,gCAAgC,EAChC,kCAAkC,CACrC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}