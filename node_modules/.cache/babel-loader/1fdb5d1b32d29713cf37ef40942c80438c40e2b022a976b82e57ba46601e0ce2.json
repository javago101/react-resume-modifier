{"ast":null,"code":"var _jsxFileName = \"/Users/guoqingwang/Dev/Web/react-resume-modifier/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hello! I'm your AI resume assistant. How can I help you today?\",\n    sender: 'ai'\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      // TODO: Replace with actual API call\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const aiResponse = {\n        id: Date.now() + 1,\n        text: \"I'm a mock response. In the future, I'll provide real AI-powered resume advice!\",\n        sender: 'ai'\n      };\n      setMessages(prev => [...prev, aiResponse]);\n    } catch (error) {\n      console.error('Failed to get AI response:', error);\n      setMessages(prev => [...prev, {\n        id: Date.now() + 1,\n        text: 'Sorry, I encountered an error. Please try again.',\n        sender: 'ai'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message ai\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"VQk/M5ExpZs9kEhXM4HnjxhQlkA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","id","text","sender","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","Date","now","prev","Promise","resolve","setTimeout","aiResponse","error","console","className","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/guoqingwang/Dev/Web/react-resume-modifier/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/chat.css';\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([\n        { id: 1, text: \"Hello! I'm your AI resume assistant. How can I help you today?\", sender: 'ai' }\n    ]);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!input.trim() || isLoading) return;\n\n        const userMessage = { id: Date.now(), text: input, sender: 'user' };\n        setMessages(prev => [...prev, userMessage]);\n        setInput('');\n        setIsLoading(true);\n\n        try {\n            // TODO: Replace with actual API call\n            // Simulate API delay\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            const aiResponse = {\n                id: Date.now() + 1,\n                text: \"I'm a mock response. In the future, I'll provide real AI-powered resume advice!\",\n                sender: 'ai'\n            };\n            setMessages(prev => [...prev, aiResponse]);\n        } catch (error) {\n            console.error('Failed to get AI response:', error);\n            setMessages(prev => [...prev, {\n                id: Date.now() + 1,\n                text: 'Sorry, I encountered an error. Please try again.',\n                sender: 'ai'\n            }]);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-messages\">\n                {messages.map(message => (\n                    <div \n                        key={message.id} \n                        className={`message ${message.sender}`}\n                    >\n                        <div className=\"message-content\">\n                            {message.text}\n                        </div>\n                    </div>\n                ))}\n                {isLoading && (\n                    <div className=\"message ai\">\n                        <div className=\"message-content typing\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                )}\n                <div ref={messagesEndRef} />\n            </div>\n            <form onSubmit={handleSubmit} className=\"chat-input-form\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    disabled={isLoading}\n                />\n                <button type=\"submit\" disabled={isLoading || !input.trim()}>\n                    Send\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}